var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require('axios')

function genFilmes(filmes) {
    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Filmes</title>
            <link rel="stylesheet" href="w3.css" />
        </head>
        <body>
            <div class="w3-card-4">

                <header class="w3-container w3-blue">
                    <h1>Lista de Filmes</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped">
                        <tr>
                            <th>Identificador</th>
                            <th>Título</th>
                            <th>Ano de Lançamento</th>
                        </tr>
    `

    filmes.forEach( filme => {
        pageHTML += `
        <tr>
            <td>${filme.id}</td>
            <td><a href = '/filmes/${filme.id}'>${filme.title}</a></td>
            <td>${filme.year}</td>
        `
    });

    pageHTML += `
        </table>
                </div>
                
                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024</h5>
                </footer>
                
            </div> 
        </body>
    </html>
    `

    return pageHTML
}

function genFilme(filme) {
    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>${filme.title}</title>
            <link rel="stylesheet" href="/w3.css" />
        </head>
        <body>
            <div class="w3-card-4">

                <header class="w3-container w3-blue">
                    <h1>${filme.id}: ${filme.title} (${filme.year})</h1>
                </header>

                <br>
                
                <div class="w3-container">
                    <ul class="w3-ul w3-border">
                        <li><h3>Elenco</h3></li>
                `
    
    filme.cast.forEach( ator => {
        pageHTML += `<li>${ator}</li>`
    })
    if (filme.cast.length<=0) {
        pageHTML += `<li>Informação sobre o elenco do filme indisponível.</li>`
    }
    pageHTML += `</ul>
                <br>
                <ul class="w3-ul w3-border">
                    <li><h3>Gêneros</h3></li>
    `

    filme.genres.forEach( genre => {
        pageHTML += `<li>${genre}</li>`
    })
    if (filme.genres.length<=0) {
        pageHTML += `<li>Informação sobre os gêneros do filme indisponível.</li>`
    }
    
    pageHTML += `
                    </ul>
                </div>

                <br>

                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024 :: A100896 [<a href = '/filmes'>Voltar à lista de filmes</a>]</h5>
                </footer>
    
            </div> 
        </body>
    </html>     
    `

    return pageHTML
}

function genAtores(atores) {
    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Atores</title>
            <link rel="stylesheet" href="w3.css" />
        </head>
        <body>
            <div class="w3-card-4">

                <header class="w3-container w3-blue">
                    <h1>Lista de Atores</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped">
                        <tr>
                            <th>Identificador</th>
                            <th>Nome</th>
                        </tr>
    `

    atores.forEach( ator => {
        pageHTML += `
        <tr>
            <td>${ator.id}</td>
            <td><a href = '/atores/${ator.id}'>${ator.name}</a></td>
        `
    });

    pageHTML += `
        </table>
                </div>
                
                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024</h5>
                </footer>
                
            </div> 
        </body>
    </html>
    `

    return pageHTML
}

function genAtor(ator) {
    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>${ator.name}</title>
            <link rel="stylesheet" href="/w3.css" />
        </head>
        <body>
            <div class="w3-card-4">

                <header class="w3-container w3-blue">
                    <h1>${ator.id}: ${ator.name}</h1>
                </header>

                <br>
                
                <div class="w3-container">
                    <ul class="w3-ul w3-border">
                        <li><h3>Filmes</h3></li>
                `
    
    ator.filmes.forEach( filme => {
        pageHTML += `<li><a href = '/filmes/${filme[1]}'>${filme[0]}</a></li>`
    })
    if (ator.filmes.length<=0) {
        pageHTML += `<li>Informação sobre os filmes participados indisponível</li>`
    }
    pageHTML += `
                    </ul>
                </div>

                <br>

                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024 :: A100896 [<a href = '/atores'>Voltar à lista de atores</a>]</h5>
                </footer>
    
            </div> 
        </body>
    </html>     
    `

    return pageHTML
}

function genGeneros(generos) {
    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Generos</title>
            <link rel="stylesheet" href="w3.css" />
        </head>
        <body>
            <div class="w3-card-4">

                <header class="w3-container w3-blue">
                    <h1>Lista de Gêneros</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped">
                        <tr>
                            <th>Identificador</th>
                            <th>Nome</th>
                        </tr>
    `

    generos.forEach( genero => {
        pageHTML += `
        <tr>
            <td>${genero.id}</td>
            <td><a href = '/generos/${genero.id}'>${genero.name}</a></td>
        `
    });

    pageHTML += `
        </table>
                </div>
                
                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024</h5>
                </footer>
                
            </div> 
        </body>
    </html>
    `

    return pageHTML
}

function genGenero(genero) {
    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>${genero.name}</title>
            <link rel="stylesheet" href="/w3.css" />
        </head>
        <body>
            <div class="w3-card-4">

                <header class="w3-container w3-blue">
                    <h1>${genero.id}: ${genero.name}</h1>
                </header>

                <br>
                
                <div class="w3-container">
                    <ul class="w3-ul w3-border">
                        <li><h3>Filmes</h3></li>
                `
    
    genero.filmes.forEach( filme => {
        pageHTML += `<li><a href = '/filmes/${filme[1]}'>${filme[0]}</a></li>`
    })
    if (genero.filmes.length<=0) {
        pageHTML += `<li>Informação sobre os filmes deste gênero indisponível</li>`
    }
    pageHTML += `
                    </ul>
                </div>

                <br>

                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024 :: A100896 [<a href = '/generos'>Voltar à lista de gêneros</a>]</h5>
                </footer>
    
            </div> 
        </body>
    </html>     
    `

    return pageHTML
}

http.createServer(function (req, res) {
    var regex_filme = /^\/filmes\/[0-9]+$/
    var regex_ator = /^\/atores\/[0-9]+$/
    var regex_genero = /^\/generos\/[0-9]+$/
    var q = url.parse( req.url, true)
    if(q.pathname == '/'){
        fs.readFile('index.html', function(erro, dados) {
            if (!erro) {
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(dados)
                res.end()
            } else {
                res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'})
                res.write('<p>Erro: Página não encontrada.</p>')
                res.write('<pre>' + q.pathname + '</pre>')
                res.end()
            }
        })
    }
    else if (q.pathname == '/filmes') {
        axios.get('http://localhost:3000/filmes')
        .then( function(resp) {
            dados = resp.data
            paginaHTML = genFilmes(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(paginaHTML)
            res.end()
        })
        .catch(function(erro) {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p>Erro: Página não encontrada.</p>')
            res.write('<pre>' + erro + '</pre>')
            res.end()
        })
    }
    else if (regex_filme.test(q.pathname)) {
        axios.get('http://localhost:3000' + q.pathname)
        .then(function(resp) {
            dados = resp.data
            paginaHTML = genFilme(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(paginaHTML)
            res.end()
        })
        .catch(function(erro) {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p>Erro: Página não encontrada.</p>')
            res.write('<pre>' + erro + '</pre>')
            res.end()
        })
    }
    else if (q.pathname == '/atores') {
        axios.get('http://localhost:3000/atores')
        .then( function(resp) {
            dados = resp.data
            paginaHTML = genAtores(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(paginaHTML)
            res.end()
        })
        .catch(function(erro) {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p>Erro: Página não encontrada.</p>')
            res.write('<pre>' + erro + '</pre>')
            res.end()
        })
    }
    else if (regex_ator.test(q.pathname)) {
        axios.get('http://localhost:3000' + q.pathname)
        .then(function(resp) {
            dados = resp.data
            paginaHTML = genAtor(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(paginaHTML)
            res.end()
        })
        .catch(function(erro) {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p>Erro: Página não encontrada.</p>')
            res.write('<pre>' + erro + '</pre>')
            res.end()
        })
    }
    else if (q.pathname == '/generos') {
        axios.get('http://localhost:3000/generos')
        .then( function(resp) {
            dados = resp.data
            paginaHTML = genGeneros(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(paginaHTML)
            res.end()
        })
        .catch(function(erro) {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p>Erro: Página não encontrada.</p>')
            res.write('<pre>' + erro + '</pre>')
            res.end()
        })
    }
    else if (regex_genero.test(q.pathname)) {
        axios.get('http://localhost:3000' + q.pathname)
        .then(function(resp) {
            dados = resp.data
            paginaHTML = genGenero(dados)
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(paginaHTML)
            res.end()
        })
        .catch(function(erro) {
            res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'})
            res.write('<p>Erro: Página não encontrada.</p>')
            res.write('<pre>' + erro + '</pre>')
            res.end()
        })
    }
    else if(q.pathname == '/w3.css'){
        fs.readFile('w3.css', function(erro, dados) {
            res.writeHead(200, {'Content-Type': 'text/css'})
            res.write(dados)
            res.end()
        })
    }
    else{
        res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'})
        res.write('<p>Erro: pedido não suportado.</p>')
        res.write('<pre>' + q.pathname + '</pre>')
        res.end()
    }
    console.log(q.pathname)
}).listen(7777)